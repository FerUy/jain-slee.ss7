<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "User_Guide.ent">
%BOOK_ENTITIES;
]>

<chapter id="introduction">

	<title>Introduction to &THIS.PLATFORM; JAIN SLEE JCC Resource Adaptor</title>

	<para>The JCC API defines a programming interface to next-generation converged networks in terms of an abstract, object-oriented specification. As such it is designed to hide the details of the specifics of the underlying network architecture and protocols from the application programmer to the extent possible. Thus the network may consist of the PSTN, a packet (IP or ATM) network, a wireless network, or a combination of these, without affecting the development of services using the API. The API is also independent of network signaling and transport protocols. Thus the network may be using various call control protocols and technologies, for example, SGCP, MGCP, SIP, H.323, ISUP, DSS1/Q.931, and DSS2/Q.2931, without the explicit knowledge of the application programmer. Indeed, different legs of a call may be using different signaling protocols and be on different underlying networks.</para>
	<para>The JAIN JCC Specification defines an API which allows for the rapid creation and deployment of dynamic telephony services into a Java telephony platform. Traditionally, telephony applications require costly resources to develop, test, and deploy. A JAIN software component written to the JCC API can be rapidly developed, tested, and integrated on a variety of platforms with access to numerous tools and utilities. A JAIN cross-platform solution gives the Carriers, Service Providers, and Network Equipment Providers a consistent, open environment where they can develop and deploy telephony services.</para>
	<para>The JAIN JCC Specification provides an interface to underlying call processing platforms supplied by platform implementers. It is expected that JAIN JCC platform providers will support a variety of lower-layer signaling, coordination and transaction protocols, such as MGCP, SIP, H.323, ISUP, TCAP, etc., in order to implement the facilities provided via the JCC API. However, the JCC API shield application developers from the specifics of the various networks and protocols.</para>
	
</chapter>